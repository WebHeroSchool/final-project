"use strict";var githubSection=document.getElementById("github-section"),skillsSection=document.getElementById("skills-section"),worksSection=document.getElementById("works-section"),worksBtnFooter=document.getElementById("works-btn-footer"),skillsBtnFooter=document.getElementById("skills-btn-footer"),githubBtnFooter=document.getElementById("github-btn-footer");worksBtnFooter.addEventListener("click",function(e){e.preventDefault(),window.scroll({top:worksSection.offsetTop,behavior:"smooth"})}),skillsBtnFooter.addEventListener("click",function(e){e.preventDefault(),window.scroll({top:skillsSection.offsetTop,behavior:"smooth"})}),githubBtnFooter.addEventListener("click",function(e){e.preventDefault(),window.scroll({top:githubSection.offsetTop,behavior:"smooth"})});var worksBtn=document.getElementById("works-btn"),skillsBtn=document.getElementById("skills-btn"),githubBtn=document.getElementById("github-btn"),burger=document.getElementsByClassName("burger")[0],inputBurger=document.getElementById("input-burger");worksBtn.addEventListener("click",function(e){e.preventDefault(),burger.classList.toggle("open"),inputBurger.checked=!1,document.body.classList.remove("modal-open"),window.scroll({top:worksSection.offsetTop,behavior:"smooth"})}),skillsBtn.addEventListener("click",function(e){e.preventDefault(),burger.classList.toggle("open"),inputBurger.checked=!1,document.body.classList.remove("modal-open"),window.scroll({top:skillsSection.offsetTop,behavior:"smooth"})}),githubBtn.addEventListener("click",function(e){e.preventDefault(),burger.classList.toggle("open"),inputBurger.checked=!1,document.body.classList.remove("modal-open"),window.scroll({top:githubSection.offsetTop,behavior:"smooth"})}),burger.addEventListener("click",function(e){burger.classList.toggle("open"),document.body.classList.toggle("modal-open")});var colors={Mercury:"#ff2b2b",TypeScript:"#2b7489",PureBasic:"#5a6986","Objective-C++":"#6866fb",Self:"#0579aa",edn:"#db5855",NewLisp:"#87AED7","Jupyter Notebook":"#DA5B0B",Rebol:"#358a5b",Frege:"#00cafe",Dart:"#00B4AB",AspectJ:"#a957b0",Shell:"#89e051","Web Ontology Language":"#9cc9dd",xBase:"#403a40",Eiffel:"#946d57",Nix:"#7e7eff",RAML:"#77d9fb",MTML:"#b7e1f4",Racket:"#22228f",Elixir:"#6e4a7e",SAS:"#B34936",Agda:"#315665",wisp:"#7582D1",D:"#ba595e",Kotlin:"#F18E33",Opal:"#f7ede0",Crystal:"#776791","Objective-C":"#438eff","ColdFusion CFC":"#ed2cd6",Oz:"#fab738",Mirah:"#c7a938","Objective-J":"#ff0c5a",Gosu:"#82937f",FreeMarker:"#0050b2",Ruby:"#701516","Component Pascal":"#b0ce4e",Arc:"#aa2afe",Brainfuck:"#2F2530",Nit:"#009917",APL:"#5A8164",Go:"#375eab","Visual Basic":"#945db7",PHP:"#4F5D95",Cirru:"#ccccff",SQF:"#3F3F3F",Glyph:"#e4cc98",Java:"#b07219",MAXScript:"#00a6a6",Scala:"#DC322F",Makefile:"#427819",ColdFusion:"#ed2cd6",Perl:"#0298c3",Lua:"#000080",Vue:"#2c3e50",Verilog:"#b2b7f8",Factor:"#636746",Haxe:"#df7900","Pure Data":"#91de79",Forth:"#341708",Red:"#ee0000",Hy:"#7790B2",Volt:"#1F1F1F",LSL:"#3d9970",eC:"#913960",CoffeeScript:"#244776",HTML:"#e44b23",Lex:"#DBCA00","API Blueprint":"#2ACCA8",Swift:"#ffac45",C:"#555555",AutoHotkey:"#6594b9",Isabelle:"#FEFE00",Metal:"#8f14e9",Clarion:"#db901e",JSONiq:"#40d47e",Boo:"#d4bec1",AutoIt:"#1C3552",Clojure:"#db5855",Rust:"#dea584",Prolog:"#74283c",SourcePawn:"#5c7611",AMPL:"#E6EFBB",FORTRAN:"#4d41b1",ANTLR:"#9DC3FF",Harbour:"#0e60e3",Tcl:"#e4cc98",BlitzMax:"#cd6400",PigLatin:"#fcd7de",Lasso:"#999999",ECL:"#8a1267",VHDL:"#adb2cb",Elm:"#60B5CC","Propeller Spin":"#7fa2a7",X10:"#4B6BEF",IDL:"#a3522f",ATS:"#1ac620",Ada:"#02f88c","Unity3D Asset":"#ab69a1",Nu:"#c9df40",LFE:"#004200",SuperCollider:"#46390b",Oxygene:"#cdd0e3",ASP:"#6a40fd",Assembly:"#6E4C13",Gnuplot:"#f0a9f0",JFlex:"#DBCA00",NetLinx:"#0aa0ff",Turing:"#45f715",Vala:"#fbe5cd",Processing:"#0096D8",Arduino:"#bd79d1",FLUX:"#88ccff",NetLogo:"#ff6375","C Sharp":"#178600",CSS:"#563d7c","Emacs Lisp":"#c065db",Stan:"#b2011d",SaltStack:"#646464",QML:"#44a51c",Pike:"#005390",LOLCODE:"#cc9900",ooc:"#b0b77e",Handlebars:"#01a9d6",J:"#9EEDFF",Mask:"#f97732",EmberScript:"#FFF4F3",TeX:"#3D6117",Nemerle:"#3d3c6e",KRL:"#28431f","Ren'Py":"#ff7f7f","Unified Parallel C":"#4e3617",Golo:"#88562A",Fancy:"#7b9db4",OCaml:"#3be133",Shen:"#120F14",Pascal:"#b0ce4e","F#":"#b845fc",Puppet:"#302B6D",ActionScript:"#882B0F",Diff:"#88dddd","Ragel in Ruby Host":"#9d5200",Fantom:"#dbded5",Zephir:"#118f9e",Click:"#E4E6F3",Smalltalk:"#596706",DM:"#447265",Ioke:"#078193",PogoScript:"#d80074",LiveScript:"#499886",JavaScript:"#f1e05a",VimL:"#199f4b",PureScript:"#1D222D",ABAP:"#E8274B",Matlab:"#bb92ac",Slash:"#007eff",R:"#198ce7",Erlang:"#B83998",Pan:"#cc0000",LookML:"#652B81",Eagle:"#814C05",Scheme:"#1e4aec",PLSQL:"#dad8d8",Python:"#3572A5",Max:"#c4a79c","Common Lisp":"#3fb68b",Latte:"#A8FF97",XQuery:"#5232e7",Omgrofl:"#cabbff",XC:"#99DA07",Nimrod:"#37775b",SystemVerilog:"#DAE1C2",Chapel:"#8dc63f",Groovy:"#e69f56",Dylan:"#6c616e",E:"#ccce35",Parrot:"#f3ca0a","Grammatical Framework":"#79aa7a","Game Maker Language":"#8fb200",Papyrus:"#6600cc","NetLinx+ERB":"#747faa",Clean:"#3F85AF",Alloy:"#64C800",Squirrel:"#800000",PAWN:"#dbb284",UnrealScript:"#a54c4d","Standard ML":"#dc566d",Slim:"#ff8f77",Perl6:"#0000fb",Julia:"#a270ba",Haskell:"#29b544",NCL:"#28431f",Io:"#a9188d",Rouge:"#cc0088","C++":"#f34b7d","AGS Script":"#B9D9FF",Dogescript:"#cca760",nesC:"#94B0C7"},url="https://api.github.com",options={headers:{Accept:"application/vnd.github.v3+json","Content-Type":"application/json"}},artem="izosimov",ilya="zekchan",user=ilya,reposAmount=4,spinner=document.getElementById("spinner"),amountPages=null,currentPageNum=1,createRepoItem=function(e){var t=document.createElement("div");return t.classList.add("github__repository-item"),t.innerHTML='\n         <a href="'.concat(e.url,'" target="_blank" class="github__repository-item-name">').concat(e.name,'</a>\n         <div class="github__item-description">\n             <div style="background-color: ').concat(e.color,'" class="github__language-color"></div>\n             <p class="github__language">').concat(e.lang,"</p>\n             ").concat(e.stars?'<p class="github__stars">'+e.stars+"</p>":"","\n             ").concat(e.forks?'<p class="github__forks">'+e.forks+"</p>":"",'\n             <p class="github__last-update">Updated on ').concat(getCustomDate(e.updated),"</p>\n         </div>"),t},getCustomDate=function(e){var t=new Date(e);return"".concat(t.getDate()," ").concat(["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][t.getMonth()]," ").concat(1900+t.getYear())},createEmptyPageElem=function(){var e=document.createElement("span");return e.classList.add("pagination-list__item"),e.innerHTML="&hellip;",e},createPageElem=function(e){var t=document.createElement("a");return t.classList.add("pagination-list__item"),t.innerHTML="".concat(e),t.addEventListener("click",function(e){document.querySelectorAll(".github__repository-item").forEach(function(e){return e.remove()})}),e==currentPageNum&&t.classList.add("pagination-list__item_active"),t.addEventListener("click",paginationClickHandler),t},getNewGithubPage=function(e){spinner.style.display="block",fetch("".concat(url,"/users/").concat(user,"/repos?page=").concat(e,"&per_page=").concat(reposAmount),options).then(function(e){return spinner.style.display="none",e.json()}).then(function(e){var a=document.querySelector(".pagination-list"),t=[];e.forEach(function(e){t.push({name:e.name,forks:e.forks,lang:e.language,updated:e.updated_at,stars:e.stargazers_count,color:colors[e.language],url:e.html_url})}),t.forEach(function(e,t){gitHubReposList.insertBefore(createRepoItem(e),a)})})};fetch("".concat(url,"/users/").concat(user),options).then(function(e){return e.json()}).then(function(e){amountPages=Math.ceil(e.public_repos/reposAmount),setPagination(currentPageNum,amountPages)});var paginationClickHandler=function(e){currentPageNum=e.target.innerHTML;document.getElementById("gitHubReposList");var t=document.querySelector(".pagination-list"),a=document.querySelectorAll(".pagination-list__item"),n={top:githubSection.offsetTop,behavior:"smooth"};window.scroll(n),a.forEach(function(e){return e.remove()}),t.remove(),setPagination(currentPageNum,amountPages)},setPagination=function(e,t){var a=document.getElementById("gitHubReposList"),n=document.createElement("div");if(n.classList.add("pagination-list"),1===t)n.appendChild(createPageElem(1));else if(t<4)for(var o=1;o<=t;o++)n.appendChild(createPageElem(o));else+e-1==0?(n.appendChild(createPageElem(+e)),n.appendChild(createPageElem(+e+1)),n.appendChild(createEmptyPageElem()),n.appendChild(createPageElem(+t))):+e-1==1?(n.appendChild(createPageElem(+e-1)),n.appendChild(createPageElem(+e)),n.appendChild(createPageElem(+e+1)),n.appendChild(createEmptyPageElem()),n.appendChild(createPageElem(+t))):+e-2==1?(n.appendChild(createPageElem(1)),n.appendChild(createPageElem(+e-1)),n.appendChild(createPageElem(+e)),n.appendChild(createPageElem(+e+1)),n.appendChild(createEmptyPageElem()),n.appendChild(createPageElem(+t))):+e+1==+t?(n.appendChild(createPageElem(1)),n.appendChild(createEmptyPageElem()),n.appendChild(createPageElem(+e-1)),n.appendChild(createPageElem(+e)),n.appendChild(createPageElem(+t))):+e+2==+t?(n.appendChild(createPageElem(1)),n.appendChild(createEmptyPageElem()),n.appendChild(createPageElem(+e-1)),n.appendChild(createPageElem(+e)),n.appendChild(createPageElem(+e+1)),n.appendChild(createPageElem(+t))):+e-1!=1&&+e+1!=+t&&+e+2!=+t&&+e!=+t?(n.appendChild(createPageElem(1)),n.appendChild(createEmptyPageElem()),n.appendChild(createPageElem(+e-1)),n.appendChild(createPageElem(+e)),n.appendChild(createPageElem(+e+1)),n.appendChild(createEmptyPageElem()),n.appendChild(createPageElem(+t))):+e==+t&&(n.appendChild(createPageElem(1)),n.appendChild(createEmptyPageElem()),n.appendChild(createPageElem(+e-1)),n.appendChild(createPageElem(+e)));a.appendChild(n),getNewGithubPage(e)},changingString=document.getElementById("changing-string"),arrow=document.getElementsByClassName("arrow")[0],phrases=["Junior frontend-ÑÐ°Ð·ÑÐ°Ð±Ð¾ÑÑÐ¸Ðº","Junior Javascript-ÑÐ°Ð·ÑÐ°Ð±Ð¾ÑÑÐ¸Ðº","HTML-Ð²ÐµÑÑÑÐ°Ð»ÑÑÐ¸Ðº"];changingString.innerHTML="";var showPhrase=function d(n,o){var i=2<arguments.length&&void 0!==arguments[2]?arguments[2]:100,l=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1e3;return new Promise(function(t){for(var e=function(e){setTimeout(function(){if(changingString.innerHTML+=n[o][e],e===n[o].length-1){changingString.innerHTML;t({phrases:n,index:o,speed:i,timeout:l})}},e*i)},a=0;a<n[o].length;a++)e(a)}).then(function(s){var c=s.timeout;return new Promise(function(r,e){setTimeout(function(){for(var t=s.phrases,a=s.speed,n=s.index,o=t[n],i=o.length,e=function(e){setTimeout(function(){o=o.slice(0,-1),changingString.innerHTML=o,e===i-1&&(n=n===t.length-1?0:n+1,globalProm.then(function(e){d(t,n,a,c)}),r())},e*a)},l=0;l<i;l++)e(l)},c)})})},globalProm=showPhrase(phrases,0,100,2e3),lol=function(){return new Promise(function(e,t){console.log("lol"),e()})};arrow.addEventListener("click",function(e){e.preventDefault();var t=document.getElementById("works-section");window.scroll({top:t.offsetTop,behavior:"smooth"})});var showMoreWorks=document.getElementsByClassName("recent-works__show-more")[0],recentWorksRows=document.getElementsByClassName("recent-works__row");showMoreWorks.dataset.isOpen=!1;for(var _i4=1;_i4<recentWorksRows.length;_i4++)recentWorksRows[_i4].style.display="none";showMoreWorks.addEventListener("click",function(e){if("false"===showMoreWorks.dataset.isOpen){for(var t=1;t<recentWorksRows.length;t++)recentWorksRows[t].style.display="flex";showMoreWorks.dataset.isOpen=!0,showMoreWorks.innerHTML="Ð¡ÐºÑÑÑÑ"}else{for(var a=1;a<recentWorksRows.length;a++)recentWorksRows[a].style.display="none";window.scroll({top:worksSection.offsetTop,behavior:"smooth"}),showMoreWorks.dataset.isOpen=!1,showMoreWorks.innerHTML="Ð¡Ð¼Ð¾ÑÑÐµÑÑ ÐµÑÑ"}});var showMoreSkills=document.getElementsByClassName("skills__show-more")[0],allSkills=document.getElementsByClassName("skills__skills-item"),skillsItemTitles=document.getElementsByClassName("skills__item-title"),onMoreSkillsClickHandler=function(e,t,a){if("false"===e.dataset.isOpen){for(var n=t.length-1;4<=n;n--)t[n].style.display="flex";e.dataset.isOpen=!0,e.innerHTML="Ð¡ÐºÑÑÑÑ"}else{for(var o=t.length-1;4<=o;o--)t[o].style.display="none";window.scroll({top:a.offsetTop,behavior:"smooth"}),e.dataset.isOpen=!1,e.innerHTML="Ð¡Ð¼Ð¾ÑÑÐµÑÑ ÐµÑÑ"}},controlResize=function(){onMoreSkillsClickHandler(showMoreSkills,allSkills,skillsSection)};window.addEventListener("resize",function(){if(document.body.clientWidth<=767){showMoreSkills.dataset.isOpen=!1;for(var e=allSkills.length-1;4<=e;e--)allSkills[e].style.display="none";showMoreSkills.addEventListener("click",controlResize)}else for(var t=allSkills.length-1;4<=t;t--)allSkills[t].style.display="flex"});for(var i=0;i<skillsItemTitles.length;i++)skillsItemTitles[i].dataset.skillsNum="0".concat(i+1);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
